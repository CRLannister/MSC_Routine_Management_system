{
  "version": 3,
  "file": "uploader.js",
  "sourceRoot": "",
  "sources": [
    "../../src/publish/uploader.ts"
  ],
  "names": [],
  "mappings": ";;;;;;;;;AAAA,AAAO,AAAc,AAAM,AAAiB;;;;;;AAC5C,AAAO,AAAW,AAAM,AAAU;;;;;;AAClC,AAAO,AAAE,AAAgB,AAAS,AAAM,AAAY,AAIpD,AAAM;;;;;;oBAAqB,AAAY,MAAE,AAAe,UAAE,AAAgB,UAAE,AAAsB,SAAE,AAA8B;AAChI,UAAM,AAAW,sBAAwB,AAAM,MAAC,AAAK,kEAAgC,AAAQ,QAAwB;AACnH,AAAK,eAAE,AAAQ,SAAC,AAAI;AACpB,AAAU,oBAAE,AAAG;AACf,AAAM,gBAAE,AAAO,QAAC,AAAM;AACtB,AAAK,eAAE,AAAE,AACV,AAAC;AALqH,KAA/D,AAAI,AAAW,AAAC,CAAvC,AAAO,GAKnC,AAAI;AAET,UAAM,AAAe,kBAAG,AAAgB,sDAAC,AAAI,AAAC;AAC9C,AAAe,oBAAC,AAAE,GAAC,AAAO,SAAE,AAAM,AAAC;AACnC,AAAe,oBACZ,AAAI;AACH,AAAM,gBAAE,AAAQ,SAAC,AAAI;AACrB,AAAI,cAAE,AAAI,AACX;AAHoB,KAAf,AAAc,EAGjB,AAAQ;AACT,AAAE,AAAC,YAAC,AAAW,eAAI,AAAI,AAAC,MAAC,AAAC;AACxB,AAAW,wBAAC,AAAI,KAAC,AAAQ,SAAC,AAAK,AAAC,AAClC;AAAC,AACH;AAAC,AAAC,AAAC,QACF,AAAI,KAAC,AAAO,AAAC,AAClB;AAAC",
  "sourcesContent": [
    "import progressStream from \"progress-stream\"\nimport ProgressBar from \"progress\"\nimport { createReadStream, Stats } from \"fs-extra-p\"\nimport { ReadStream } from \"tty\"\nimport { ClientRequest } from \"http\"\n\nexport function uploadFile(file: string, fileStat: Stats, fileName: string, request: ClientRequest, reject: (error: Error) => void) {\n  const progressBar = (<ReadStream>process.stdin).isTTY ? new ProgressBar(`Uploading ${fileName} [:bar] :percent :etas`, {\n    total: fileStat.size,\n    incomplete: \" \",\n    stream: process.stdout,\n    width: 20,\n  }) : null\n\n  const fileInputStream = createReadStream(file)\n  fileInputStream.on(\"error\", reject)\n  fileInputStream\n    .pipe(progressStream({\n      length: fileStat.size,\n      time: 1000\n    }, progress => {\n      if (progressBar != null) {\n        progressBar.tick(progress.delta)\n      }\n    }))\n    .pipe(request)\n}"
  ]
}
