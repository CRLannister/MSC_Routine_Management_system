"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.uploadFile = uploadFile;

var _progressStream;

function _load_progressStream() {
    return _progressStream = _interopRequireDefault(require("progress-stream"));
}

var _progress;

function _load_progress() {
    return _progress = _interopRequireDefault(require("progress"));
}

var _fsExtraP;

function _load_fsExtraP() {
    return _fsExtraP = require("fs-extra-p");
}

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function uploadFile(file, fileStat, fileName, request, reject) {
    const progressBar = process.stdin.isTTY ? new (_progress || _load_progress()).default(`Uploading ${ fileName } [:bar] :percent :etas`, {
        total: fileStat.size,
        incomplete: " ",
        stream: process.stdout,
        width: 20
    }) : null;
    const fileInputStream = (0, (_fsExtraP || _load_fsExtraP()).createReadStream)(file);
    fileInputStream.on("error", reject);
    fileInputStream.pipe((0, (_progressStream || _load_progressStream()).default)({
        length: fileStat.size,
        time: 1000
    }, progress => {
        if (progressBar != null) {
            progressBar.tick(progress.delta);
        }
    })).pipe(request);
}
//# sourceMappingURL=uploader.js.map