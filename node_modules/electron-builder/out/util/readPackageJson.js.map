{
  "version": 3,
  "file": "readPackageJson.js",
  "sourceRoot": "",
  "sources": [
    "../../src/util/readPackageJson.ts"
  ],
  "names": [],
  "mappings": ";;;;;;;;;;;;;;sEAKO,AAAK,WAA0B,AAAY;AAChD,cAAM,AAAI,OAAG,MAAM,AAAQ,8CAAC,AAAI,AAAC;AACjC,cAAM,AAAO,QAAC,AAAI,MAAE,AAAI,AAAC;AACzB,AAAa,sBAAC,AAAI,AAAC;AACnB,AAAM,eAAC,AAAI,AACb;AAAC;;;;;;;;uEAED,AAAK,WAAkB,AAAY,MAAE,AAAS;AAC5C,AAAE,AAAC,YAAC,AAAI,KAAC,AAAY,gBAAI,AAAI,AAAC,MAAC,AAAC;AAC9B,AAAM,AACR;AAAC;AAED,YAAI,AAAU,aAAkB,AAAI;AACpC,YAAI,AAAC;AACH,AAAU,yBAAG,MAAM,AAAQ,8CAAC,AAAI,MAAC,AAAO,QAAC,AAAI,MAAC,AAAO,QAAC,AAAI,AAAC,OAAE,AAAS,AAAC,YAAE,AAAM,AAAC,AAClF;AACA,UAAA,AAAK,AAAC,OAAC,AAAO,AAAC,SAAC,AAAC;AACf,AAAM,AACR;AAAC;AAED,AAAI,aAAC,AAAY,0BACd,AAAK,MAAC,AAAQ,AAAC,UACf,AAAG;AAAC,AAAE,mBAAI,AAAE,GAAC,AAAO,QAAC,AAAU,YAAE,AAAE,AAAC,IAAC,AAAI,AAAE,AAAC,AACjD;SAHsB,AAAU;AAG/B;;;;;;;;;AA5BD,AAAO,AAAK,AAAI,AAAM,AAAM;;;;AAC5B,AAAO,AAAE,AAAQ,AAAE,AAAQ,AAAE,AAAM,AAAY;;;;;;AAE/C,MAAM,AAAa,gBAAG,AAAO,QAAC,AAAwB,AAAC,AAEvD,AAAM",
  "sourcesContent": [
    "import * as path from \"path\"\nimport { readJson, readFile } from \"fs-extra-p\"\n\nconst normalizeData = require(\"normalize-package-data\")\n\nexport async function readPackageJson(file: string): Promise<any> {\n  const data = await readJson(file)\n  await authors(file, data)\n  normalizeData(data)\n  return data\n}\n\nasync function authors(file: string, data: any) {\n  if (data.contributors != null) {\n    return\n  }\n\n  let authorData: string | null = null\n  try {\n    authorData = await readFile(path.resolve(path.dirname(file), \"AUTHORS\"), \"utf8\")\n  }\n  catch (ignored) {\n    return\n  }\n\n  data.contributors = authorData\n    .split(/\\r?\\n/g)\n    .map(it => it.replace(/^\\s*#.*$/, \"\").trim())\n}"
  ]
}
