{
  "version": 3,
  "file": "util.js",
  "sourceRoot": "",
  "sources": [
    "../../src/util/util.ts"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "import { execFile, spawn as _spawn, ChildProcess, SpawnOptions } from \"child_process\"\nimport BluebirdPromise from \"bluebird-lst-c\"\nimport { homedir } from \"os\"\nimport * as path from \"path\"\nimport { readJson } from \"fs-extra-p\"\nimport { yellow, red } from \"chalk\"\nimport _debug from \"debug\"\nimport { warn, log } from \"./log\"\nimport { createHash } from \"crypto\"\nimport \"source-map-support/register\"\nimport { statOrNull } from \"./fs\"\nimport { DevMetadata } from \"../metadata\"\n\nexport const debug = _debug(\"electron-builder\")\nexport const debug7z = _debug(\"electron-builder:7z\")\n\nconst DEFAULT_APP_DIR_NAMES = [\"app\", \"www\"]\n\nexport interface BaseExecOptions {\n  cwd?: string\n  env?: any\n  stdio?: any\n}\n\nexport interface ExecOptions extends BaseExecOptions {\n  customFds?: any\n  encoding?: string\n  timeout?: number\n  maxBuffer?: number\n  killSignal?: string\n}\n\nexport function removePassword(input: string) {\n  return input.replace(/(-P |pass:|\\/p|-pass )([^ ]+)/, function (match, p1, p2) {\n    return `${p1}${createHash(\"sha256\").update(p2).digest(\"hex\")} (sha256 hash)`\n  })\n}\n\nexport function execWine(file: string, args: Array<string>, options?: ExecOptions): Promise<string> {\n  return exec(process.platform === \"win32\" ? file : \"wine\", prepareArgs(args, file), options)\n}\n\nexport function prepareArgs(args: Array<string>, exePath: string) {\n  if (process.platform !== \"win32\") {\n    args.unshift(exePath)\n  }\n  return args\n}\n\nexport function exec(file: string, args?: Array<string> | null, options?: ExecOptions): Promise<string> {\n  if (debug.enabled) {\n    debug(`Executing ${file} ${args == null ? \"\" : removePassword(args.join(\" \"))}`)\n  }\n\n  return new BluebirdPromise<string>((resolve, reject) => {\n    execFile(file, <any>args, options, function (error, stdout, stderr) {\n      if (error == null) {\n        if (debug.enabled) {\n          if (stderr.length !== 0) {\n            log(stderr)\n          }\n          if (stdout.length !== 0) {\n            log(stdout)\n          }\n        }\n        resolve(stdout)\n      }\n      else {\n        let message = red(removePassword(`Exit code: ${(<any>error).code}. ${error.message}`))\n        if (stdout.length !== 0) {\n          message += `\\n${yellow(stdout)}`\n        }\n        if (stderr.length !== 0) {\n          message += `\\n${red(stderr)}`\n        }\n\n        reject(new Error(message))\n      }\n    })\n  })\n}\n\nexport function doSpawn(command: string, args: Array<string>, options?: SpawnOptions, pipeInput?: Boolean): ChildProcess {\n  if (options == null) {\n    options = {}\n  }\n  if (options.stdio == null) {\n    options.stdio = [pipeInput ? \"pipe\" : \"ignore\", debug.enabled ? \"inherit\" : \"pipe\", \"pipe\"]\n  }\n\n  if (debug.enabled) {\n    const argsString = args.join(\" \")\n    debug(`Spawning ${command} ${command === \"docker\" ? argsString : removePassword(argsString)}`)\n  }\n  return _spawn(command, args, options)\n}\n\nexport function spawn(command: string, args?: Array<string> | null, options?: SpawnOptions): Promise<any> {\n  return new BluebirdPromise<any>((resolve, reject) => {\n    handleProcess(\"close\", doSpawn(command, args || [], options), command, resolve, reject)\n  })\n}\n\nexport function handleProcess(event: string, childProcess: ChildProcess, command: string, resolve: ((value?: any) => void) | null, reject: (reason?: any) => void) {\n  childProcess.on(\"error\", reject)\n\n  let out = \"\"\n  if (!debug.enabled && childProcess.stdout != null) {\n    childProcess.stdout.on(\"data\", (data: string) => {\n      out += data\n    })\n  }\n\n  let errorOut = \"\"\n  if (childProcess.stderr != null) {\n    childProcess.stderr.on(\"data\", (data: string) => {\n      errorOut += data\n    })\n  }\n\n  childProcess.once(event, (code: number) => {\n    if (code === 0 && debug.enabled) {\n      debug(`${command} (${childProcess.pid}) exited with code ${code}`)\n    }\n\n    if (code !== 0) {\n      function formatOut(text: string, title: string) {\n        if (text.length === 0) {\n          return \"\"\n        }\n        else {\n          return `\\n${title}:\\n${text}`\n        }\n      }\n\n      reject(new Error(`${command} exited with code ${code}${formatOut(out, \"Output\")}${formatOut(errorOut, \"Error output\")}`))\n    }\n    else if (resolve != null) {\n      resolve()\n    }\n  })\n}\n\nexport async function getElectronVersion(packageData: any, packageJsonPath: string): Promise<string> {\n  const build = packageData.build\n  // build is required, but this check is performed later, so, we should check for null\n  if (build != null && build.electronVersion != null) {\n    return build.electronVersion\n  }\n\n  for (const name of [\"electron\", \"electron-prebuilt\", \"electron-prebuilt-compile\"]) {\n    try {\n      return (await readJson(path.join(path.dirname(packageJsonPath), \"node_modules\", name, \"package.json\"))).version\n    }\n    catch (e) {\n      if (e.code !== \"ENOENT\") {\n        warn(`Cannot read electron version from ${name} package.json: ${e.message}`)\n      }\n    }\n  }\n\n  const electronPrebuiltDep = findFromElectronPrebuilt(packageData)\n  if (electronPrebuiltDep == null) {\n    throw new Error(\"Cannot find electron dependency to get electron version in the '\" + packageJsonPath + \"'\")\n  }\n\n  const firstChar = electronPrebuiltDep[0]\n  return firstChar === \"^\" || firstChar === \"~\" ? electronPrebuiltDep.substring(1) : electronPrebuiltDep\n}\n\nfunction findFromElectronPrebuilt(packageData: any): any {\n  for (const name of [\"electron\", \"electron-prebuilt\", \"electron-prebuilt-compile\"]) {\n    const devDependencies = packageData.devDependencies\n    let dep = devDependencies == null ? null : devDependencies[name]\n    if (dep == null) {\n      const dependencies = packageData.dependencies\n      dep = dependencies == null ? null : dependencies[name]\n    }\n    if (dep != null) {\n      return dep\n    }\n  }\n  return null\n}\n\nexport async function computeDefaultAppDirectory(projectDir: string, userAppDir: string | null | undefined): Promise<string> {\n  if (userAppDir != null) {\n    const absolutePath = path.resolve(projectDir, userAppDir)\n    const stat = await statOrNull(absolutePath)\n    if (stat == null) {\n      throw new Error(`Application directory ${userAppDir} doesn't exists`)\n    }\n    else if (!stat.isDirectory()) {\n      throw new Error(`Application directory ${userAppDir} is not a directory`)\n    }\n    else if (projectDir === absolutePath) {\n      warn(`Specified application directory \"${userAppDir}\" equals to project dir — superfluous or wrong configuration`)\n    }\n    return absolutePath\n  }\n\n  for (const dir of DEFAULT_APP_DIR_NAMES) {\n    const absolutePath = path.join(projectDir, dir)\n    const packageJson = path.join(absolutePath, \"package.json\")\n    const stat = await statOrNull(packageJson)\n    if (stat != null && stat.isFile()) {\n      return absolutePath\n    }\n  }\n  return projectDir\n}\n\nexport function use<T, R>(value: T | null, task: (it: T) => R): R | null {\n  return value == null ? null : task(value)\n}\n\nexport function debug7zArgs(command: \"a\" | \"x\"): Array<string> {\n  const args = [command, \"-bd\"]\n  if (debug7z.enabled) {\n    args.push(\"-bb3\")\n  }\n  else if (!debug.enabled) {\n    args.push(\"-bb0\")\n  }\n  return args\n}\n\nexport let tmpDirCounter = 0\n// add date to avoid use stale temp dir\nconst tempDirPrefix = `${process.pid.toString(16)}-${Date.now().toString(16)}`\n\nexport function getTempName(prefix?: string | n): string {\n  return `${prefix == null ? \"\" : `${prefix}-`}${tempDirPrefix}-${(tmpDirCounter++).toString(16)}`\n}\n\nexport function isEmptyOrSpaces(s: string | n) {\n  return s == null || s.trim().length === 0\n}\n\nexport function asArray<T>(v: n | T | Array<T>): Array<T> {\n  if (v == null) {\n    return []\n  }\n  else if (Array.isArray(v)) {\n    return v\n  }\n  else {\n    return [v]\n  }\n}\nexport function getCacheDirectory(): string {\n  if (process.platform === \"darwin\") {\n    return path.join(homedir(), \"Library\", \"Caches\", \"electron-builder\")\n  }\n  else if (process.platform === \"win32\" && process.env.LOCALAPPDATA != null) {\n    return path.join(process.env.LOCALAPPDATA, \"electron-builder\", \"cache\")\n  }\n  else {\n    return path.join(homedir(), \".cache\", \"electron-builder\")\n  }\n}\n\nexport function getDirectoriesConfig(m: DevMetadata) {\n  return m.build.directories || (<any>m).directories\n}"
  ]
}
